Annotated disassembly of the XMC2Go factory installed blinky app (objdump).

../../flash/patch:     file format binary


Disassembly of section .data:

10001000 <.data>:
10001000:	20000920 Initial SP
10001004:	10001019 Reset Vector
10001008:	100010cd HardFault
1000100c:	100010cf HardFault
10001010:	80000000 CLK_VAL1 Clock not set by SSW
10001014:	80000000 CLK_VAL1 Clock Gate not set by SSW

init
10001018:	4803      	ldr	r0, [pc, #12]	; SP = (0x10001028) = 0x20000920
1000101a:	4685      	mov	sp, r0
1000101c:	4803      	ldr	r0, [pc, #12]	; call (0x1000102c) = 0x100010fd
1000101e:	4780      	blx	r0
10001020:	4803      	ldr	r0, [pc, #12]	; call (0x10001030) = 0x100010c9
10001022:	4780      	blx	r0
10001024:	e006      	b.n	0x10001034
10001026:	0000
10001028:	20000920
1000102c:	100010fd
10001030:	100010c9

main
10001034:	4818      	ldr	r0, [pc, #96]	; (0x10001098) = 10001940 ; "Visit www.infineon.com/XMC"
10001036:	4919      	ldr	r1, [pc, #100]	; (0x1000109c) = 20000930 ; send_buffer_32
10001038:	4a19      	ldr	r2, [pc, #100]	; (0x100010a0) = 00000008 ; longwords_to_send
1000103a:	2a00      	cmp	r2, #0          ; copy first message to send_buffer_32
1000103c:	d00a      	beq.n	0x10001054
1000103e:	2a04      	cmp	r2, #4
10001040:	d200      	bcs.n	0x10001044
10001042:	2204      	movs	r2, #4
10001044:	0892      	lsrs	r2, r2, #2
10001046:	6803      	ldr	r3, [r0, #0]
10001048:	600b      	str	r3, [r1, #0]
1000104a:	3a01      	subs	r2, #1
1000104c:	d002      	beq.n	0x10001054
1000104e:	3004      	adds	r0, #4
10001050:	3104      	adds	r1, #4
10001052:	e7f8      	b.n	0x10001046
10001054:	4813      	ldr	r0, [pc, #76]	; (0x100010a4) = 20000920
10001056:	4914      	ldr	r1, [pc, #80]	; (0x100010a8) = 00000010
10001058:	2900      	cmp	r1, #0          ; zero out 16 bytes at 20000920
1000105a:	d009      	beq.n	0x10001070
1000105c:	2904      	cmp	r1, #4
1000105e:	d200      	bcs.n	0x10001062
10001060:	2104      	movs	r1, #4
10001062:	0889      	lsrs	r1, r1, #2
10001064:	2200      	movs	r2, #0
10001066:	6002      	str	r2, [r0, #0]
10001068:	3901      	subs	r1, #1
1000106a:	d001      	beq.n	0x10001070
1000106c:	3004      	adds	r0, #4
1000106e:	e7fa      	b.n	0x10001066
10001070:	480e      	ldr	r0, [pc, #56]	; (0x100010ac) = 10001830 interrupt_handler_table
10001072:	490f      	ldr	r1, [pc, #60]	; (0x100010b0) = 2000000c interrupt vectors
10001074:	4a0f      	ldr	r2, [pc, #60]	; (0x100010b4) = 00000110 length of interrupt table
10001076:	0892      	lsrs	r2, r2, #2      ; copy interrupt_handler_table to interrupt_vectors
10001078:	6803      	ldr	r3, [r0, #0]
1000107a:	600b      	str	r3, [r1, #0]
1000107c:	3a01      	subs	r2, #1
1000107e:	d002      	beq.n	0x10001086
10001080:	3004      	adds	r0, #4
10001082:	3104      	adds	r1, #4
10001084:	e7f8      	b.n	0x10001078
10001086:	480c      	ldr	r0, [pc, #48]	; (0x100010b8) = 10001109
10001088:	4780      	blx	r0              ; call 10001109 CalculateFrequency
1000108a:	480c      	ldr	r0, [pc, #48]	; (0x100010bc) = 20000920
1000108c:	4685      	mov	sp, r0
1000108e:	2000      	movs	r0, #0
10001090:	2100      	movs	r1, #0
10001092:	4a0b      	ldr	r2, [pc, #44]	; (0x100010c0) = 10001415
10001094:	4697      	mov	pc, r2          ; jump to application

10001096:	0000
10001098:	10001940
1000109c:	20000930  ; send_buffer_32
100010a0:	00000008  ; loop counter
100010a4:	20000920  ; top of stack
100010a8:	00000010  ; loop counter
100010ac:	10001830  ; interrupt handler table
100010b0:	2000000c
100010b4:	00000110
100010b8:	10001109  ; function
100010bc:	20000920  ; top of stack
100010c0:	10001415  ; application function

Do nothing handler (except r0=1)
100010c4:	2001      	movs	r0, #1
100010c6:	4770      	bx	lr

Second function called from init.
100010c8:	46c0      	nop			; (mov r8, r8)
100010ca:	4770      	bx	lr
100010cc:	e7fe      	b.n	0x100010cc  HardFault initial
100010ce:	e7fe      	b.n	0x100010ce  HardFault post interrupts
100010d0:	e7fe      	b.n	0x100010d0  SVCall
100010d2:	e7fe      	b.n	0x100010d2  PendSV
100010d4:	e7fe      	b.n	0x100010d4  Unused default SysTick
100010d6:	e7fe      	b.n	0x100010d6  IRQ0
100010d8:	e7fe      	b.n	0x100010d8  IRQ1
100010da:	e7fe      	b.n	0x100010da  IRQ2
100010dc:	e7fe      	b.n	0x100010dc  IRQ3
100010de:	e7fe      	b.n	0x100010de  IRQ4
100010e0:	e7fe      	b.n	0x100010e0  IRQ5
100010e2:	e7fe      	b.n	0x100010e2  IRQ6
100010e4:	e7fe      	b.n	0x100010e4  IRQ15
100010e6:	e7fe      	b.n	0x100010e6  IRQ16
100010e8:	e7fe      	b.n	0x100010e8  IRQ21
100010ea:	e7fe      	b.n	0x100010ea  IRQ22
100010ec:	e7fe      	b.n	0x100010ec  IRQ23
100010ee:	e7fe      	b.n	0x100010ee  IRQ24
100010f0:	e7fe      	b.n	0x100010f0  IRQ9
100010f2:	e7fe      	b.n	0x100010f2  IRQ10
100010f4:	e7fe      	b.n	0x100010f4  IRQ11
100010f6:	e7fe      	b.n	0x100010f6  IRQ12
100010f8:	e7fe      	b.n	0x100010f8  IRQ13
100010fa:	e7fe      	b.n	0x100010fa  IRQ14

First function called from init.
100010fc:	b580      	push	{r7, lr}
100010fe:	af00      	add	r7, sp, #0
10001100:	f7ff ffe0 	bl	0x100010c4
10001104:	46bd      	mov	sp, r7
10001106:	bd80      	pop	{r7, pc}

CalculateFrequency
10001108:	b580      	push	{r7, lr}
1000110a:	b086      	sub	sp, #24
1000110c:	af00      	add	r7, sp, #0
1000110e:	4b1c      	ldr	r3, [pc, #112]	; (0x10001180) = 40010300 (SCU_CCU_BASE)
10001110:	681b      	ldr	r3, [r3, #0]    ; SCU_CLKCR
10001112:	613b      	str	r3, [r7, #16]   ;*r7+16 = SCU_CLKCR
10001114:	693a      	ldr	r2, [r7, #16]
10001116:	23ff      	movs	r3, #255	; 0xff
10001118:	021b      	lsls	r3, r3, #8      ; 0xff00
1000111a:	4013      	ands	r3, r2
1000111c:	0a1b      	lsrs	r3, r3, #8      ;*r3 (r7+12) = SCU_CLKCR.IDIV
1000111e:	60fb      	str	r3, [r7, #12]
10001120:	693a      	ldr	r2, [r7, #16]
10001122:	23ff      	movs	r3, #255	; 0xff
10001124:	4013      	ands	r3, r2
10001126:	60bb      	str	r3, [r7, #8]    ; r7+8 = SCU_CLKCR.FDIV
10001128:	68fb      	ldr	r3, [r7, #12]
1000112a:	2b00      	cmp	r3, #0
1000112c:	d01f      	beq.n	0x1000116e      ; SCU_CLKCR.IDIV = 0? jump
1000112e:	68bb      	ldr	r3, [r7, #8]
10001130:	2b00      	cmp	r3, #0          ; SCU_CLKCR.FDIV != 0? small jump
10001132:	d106      	bne.n	0x10001142
10001134:	4813      	ldr	r0, [pc, #76]	; (0x10001184) = 01e84800 (32M)
10001136:	68f9      	ldr	r1, [r7, #12]   ; SCU_CLKCR.IDIV
10001138:	f000 faf6 	bl	0x10001728      ; Divide()
1000113c:	1c03      	adds	r3, r0, #0
1000113e:	617b      	str	r3, [r7, #20]   ; r7+20 = 32M/IDIV (XXX probably)
10001140:	e017      	b.n	0x10001172
10001142:	68fb      	ldr	r3, [r7, #12]   ; SCU_CLKCR.IDIV
10001144:	021a      	lsls	r2, r3, #8
10001146:	68bb      	ldr	r3, [r7, #8]    ; SCU_CLKCR.FDIV
10001148:	18d3      	adds	r3, r2, r3
1000114a:	607b      	str	r3, [r7, #4]    ; r7+4 = (IDIV<<8) + FDIV
1000114c:	687b      	ldr	r3, [r7, #4]
1000114e:	22fa      	movs	r2, #250	; 0xfa
10001150:	0610      	lsls	r0, r2, #24     ; 0xFA000000 (16M << 8)
10001152:	1c19      	adds	r1, r3, #0
10001154:	f000 fae8 	bl	0x10001728      ; Divide()
10001158:	1c03      	adds	r3, r0, #0
1000115a:	603b      	str	r3, [r7, #0]    ;*r7+0 = 16M/(IDIV.FDIV) (XXX probably)
1000115c:	683b      	ldr	r3, [r7, #0]
1000115e:	22fa      	movs	r2, #250	; 0xfa
10001160:	0092      	lsls	r2, r2, #2      ; 0x03E8 (1000)
10001162:	4353      	muls	r3, r2          ; (16M/(IDIV.FDIV))*1000
10001164:	617b      	str	r3, [r7, #20]   ;*r7+20 = ^^
10001166:	697b      	ldr	r3, [r7, #20]
10001168:	0a5b      	lsrs	r3, r3, #9
1000116a:	617b      	str	r3, [r7, #20]   ;*r7+20 = ^^ / 512
1000116c:	e001      	b.n	0x10001172
1000116e:	4b05      	ldr	r3, [pc, #20]	; (0x10001184) = 01e84800 (32M)
10001170:	617b      	str	r3, [r7, #20]   ;*r7+20 = 32M
10001172:	4b05      	ldr	r3, [pc, #20]	; (0x10001188) = 2000092c
10001174:	697a      	ldr	r2, [r7, #20]
10001176:	601a      	str	r2, [r3, #0]    ; 2000092c = frequency
10001178:	46bd      	mov	sp, r7
1000117a:	b006      	add	sp, #24
1000117c:	bd80      	pop	{r7, pc}

1000117e:	46c0      	nop			; (mov r8, r8)
10001180:	40010300 SCU_CCU_BASE
10001184:	01e84800
10001188:	2000092c

(-1, 3)
1000118c:	b5b0      	push	{r4, r5, r7, lr}
1000118e:	b082      	sub	sp, #8
10001190:	af00      	add	r7, sp, #0
10001192:	1c02      	adds	r2, r0, #0      ; r2 = r0 (-1)
10001194:	6039      	str	r1, [r7, #0]    ; r7 + 0 = 3
10001196:	1dfb      	adds	r3, r7, #7
10001198:	701a      	strb	r2, [r3, #0]    ; r7 + 7 = -1
1000119a:	1dfb      	adds	r3, r7, #7
1000119c:	781b      	ldrb	r3, [r3, #0]    ; r3 = (byte)-1
1000119e:	2b7f      	cmp	r3, #127	; 0x7f
100011a0:	d932      	bls.n	0x10001208
100011a2:	4930      	ldr	r1, [pc, #192]	; (0x10001264) = SCS_BASE
100011a4:	1dfb      	adds	r3, r7, #7
100011a6:	781b      	ldrb	r3, [r3, #0]
100011a8:	1c1a      	adds	r2, r3, #0
100011aa:	230f      	movs	r3, #15
100011ac:	4013      	ands	r3, r2
100011ae:	3b08      	subs	r3, #8
100011b0:	0898      	lsrs	r0, r3, #2
100011b2:	4a2c      	ldr	r2, [pc, #176]	; (0x10001264) = SCS_BASE
100011b4:	1dfb      	adds	r3, r7, #7
100011b6:	781b      	ldrb	r3, [r3, #0]
100011b8:	1c1c      	adds	r4, r3, #0
100011ba:	230f      	movs	r3, #15
100011bc:	4023      	ands	r3, r4
100011be:	3b08      	subs	r3, #8
100011c0:	089b      	lsrs	r3, r3, #2
100011c2:	3306      	adds	r3, #6
100011c4:	009b      	lsls	r3, r3, #2
100011c6:	18d3      	adds	r3, r2, r3
100011c8:	685b      	ldr	r3, [r3, #4]
100011ca:	1dfa      	adds	r2, r7, #7
100011cc:	7812      	ldrb	r2, [r2, #0]
100011ce:	1c14      	adds	r4, r2, #0
100011d0:	2203      	movs	r2, #3
100011d2:	4022      	ands	r2, r4
100011d4:	00d2      	lsls	r2, r2, #3
100011d6:	24ff      	movs	r4, #255	; 0xff
100011d8:	1c25      	adds	r5, r4, #0
100011da:	4095      	lsls	r5, r2
100011dc:	1c2a      	adds	r2, r5, #0
100011de:	43d2      	mvns	r2, r2
100011e0:	401a      	ands	r2, r3
100011e2:	683b      	ldr	r3, [r7, #0]
100011e4:	019c      	lsls	r4, r3, #6
100011e6:	23ff      	movs	r3, #255	; 0xff
100011e8:	401c      	ands	r4, r3
100011ea:	1dfb      	adds	r3, r7, #7
100011ec:	781b      	ldrb	r3, [r3, #0]
100011ee:	1c1d      	adds	r5, r3, #0
100011f0:	2303      	movs	r3, #3
100011f2:	402b      	ands	r3, r5
100011f4:	00db      	lsls	r3, r3, #3
100011f6:	1c25      	adds	r5, r4, #0
100011f8:	409d      	lsls	r5, r3
100011fa:	1c2b      	adds	r3, r5, #0
100011fc:	431a      	orrs	r2, r3
100011fe:	1d83      	adds	r3, r0, #6
10001200:	009b      	lsls	r3, r3, #2
10001202:	18cb      	adds	r3, r1, r3
10001204:	605a      	str	r2, [r3, #4]
10001206:	e029      	b.n	0x1000125c

10001208:	4b17      	ldr	r3, [pc, #92]	; (0x10001268) = NVIC_BASE
1000120a:	1dfa      	adds	r2, r7, #7
1000120c:	7812      	ldrb	r2, [r2, #0]
1000120e:	b252      	sxtb	r2, r2
10001210:	0892      	lsrs	r2, r2, #2
10001212:	4915      	ldr	r1, [pc, #84]	; (0x10001268) = NVIC_BASE
10001214:	1df8      	adds	r0, r7, #7
10001216:	7800      	ldrb	r0, [r0, #0]
10001218:	b240      	sxtb	r0, r0
1000121a:	0880      	lsrs	r0, r0, #2
1000121c:	30c0      	adds	r0, #192	; 0xc0
1000121e:	0080      	lsls	r0, r0, #2
10001220:	5841      	ldr	r1, [r0, r1]
10001222:	1df8      	adds	r0, r7, #7
10001224:	7800      	ldrb	r0, [r0, #0]
10001226:	1c04      	adds	r4, r0, #0
10001228:	2003      	movs	r0, #3
1000122a:	4020      	ands	r0, r4
1000122c:	00c0      	lsls	r0, r0, #3
1000122e:	24ff      	movs	r4, #255	; 0xff
10001230:	1c25      	adds	r5, r4, #0
10001232:	4085      	lsls	r5, r0
10001234:	1c28      	adds	r0, r5, #0
10001236:	43c0      	mvns	r0, r0
10001238:	4008      	ands	r0, r1
1000123a:	6839      	ldr	r1, [r7, #0]
1000123c:	018c      	lsls	r4, r1, #6
1000123e:	21ff      	movs	r1, #255	; 0xff
10001240:	400c      	ands	r4, r1
10001242:	1df9      	adds	r1, r7, #7
10001244:	7809      	ldrb	r1, [r1, #0]
10001246:	1c0d      	adds	r5, r1, #0
10001248:	2103      	movs	r1, #3
1000124a:	4029      	ands	r1, r5
1000124c:	00c9      	lsls	r1, r1, #3
1000124e:	1c25      	adds	r5, r4, #0
10001250:	408d      	lsls	r5, r1
10001252:	1c29      	adds	r1, r5, #0
10001254:	4301      	orrs	r1, r0
10001256:	32c0      	adds	r2, #192	; 0xc0
10001258:	0092      	lsls	r2, r2, #2
1000125a:	50d1      	str	r1, [r2, r3]

1000125c:	46bd      	mov	sp, r7
1000125e:	b002      	add	sp, #8
10001260:	bdb0      	pop	{r4, r5, r7, pc}

10001262:	46c0      	nop			; (mov r8, r8)
10001264:	e000ed00
10001268:	e000e100

SetSystickPeriod
SYST_CSR   0x00010007
SYST_RVR   0x000c34ff
SYST_CVR   0x00057423
SYST_CALIB 0x40000147
1000126c:	b580      	push	{r7, lr}
1000126e:	b082      	sub	sp, #8
10001270:	af00      	add	r7, sp, #0
10001272:	6078      	str	r0, [r7, #4]
10001274:	687b      	ldr	r3, [r7, #4]
10001276:	1e5a      	subs	r2, r3, #1
10001278:	4b0c      	ldr	r3, [pc, #48]	; (0x100012ac)  ; 00ffffff
1000127a:	429a      	cmp	r2, r3
1000127c:	d901      	bls.n	0x10001282
1000127e:	2301      	movs	r3, #1          ; if requested_val > 0x00ffffff
10001280:	e010      	b.n	0x100012a4      ;   return(1)
10001282:	4b0b      	ldr	r3, [pc, #44]	; (0x100012b0)  ; STK_BASE (systick)
10001284:	687a      	ldr	r2, [r7, #4]    ; SYST_RVR
10001286:	3a01      	subs	r2, #1
10001288:	605a      	str	r2, [r3, #4]    ; SYST_RVR = SYST_RVR - 1
1000128a:	2301      	movs	r3, #1
1000128c:	425b      	negs	r3, r3
1000128e:	1c18      	adds	r0, r3, #0      ; r0 = r3 = -1
10001290:	2103      	movs	r1, #3          ; r1 = 3
10001292:	f7ff ff7b 	bl	0x1000118c
10001296:	4b06      	ldr	r3, [pc, #24]	; (0x100012b0)  ; STK_BASE
10001298:	2200      	movs	r2, #0
1000129a:	609a      	str	r2, [r3, #8]    ;*SYST_CVR = 0
1000129c:	4b04      	ldr	r3, [pc, #16]	; (0x100012b0)  ; STK_BASE
1000129e:	2207      	movs	r2, #7
100012a0:	601a      	str	r2, [r3, #0]    ;*SYST_CSR = 7 (enable, exception req, processor clock)
100012a2:	2300      	movs	r3, #0
100012a4:	1c18      	adds	r0, r3, #0
100012a6:	46bd      	mov	sp, r7
100012a8:	b002      	add	sp, #8
100012aa:	bd80      	pop	{r7, pc}

100012ac:	00ffffff
100012b0:	e000e010

SetP1_IOCR0_PC0(byte)
100012b4:	b580      	push	{r7, lr}
100012b6:	b082      	sub	sp, #8
100012b8:	af00      	add	r7, sp, #0
100012ba:	1c02      	adds	r2, r0, #0
100012bc:	1dfb      	adds	r3, r7, #7
100012be:	701a      	strb	r2, [r3, #0]
100012c0:	4b07      	ldr	r3, [pc, #28]	; (0x100012e0) P1_BASE
100012c2:	4a07      	ldr	r2, [pc, #28]	; (0x100012e0) P1_BASE
100012c4:	6912      	ldr	r2, [r2, #16]   ; P1_IOCR0
100012c6:	21f8      	movs	r1, #248	; 0xf8
100012c8:	438a      	bics	r2, r1
100012ca:	611a      	str	r2, [r3, #16]   ; P1_IOCR &= 0xFFFFFF07
100012cc:	4b04      	ldr	r3, [pc, #16]	; (0x100012e0) P1_BASE
100012ce:	4a04      	ldr	r2, [pc, #16]	; (0x100012e0) P1_BASE
100012d0:	6911      	ldr	r1, [r2, #16]
100012d2:	1dfa      	adds	r2, r7, #7
100012d4:	7812      	ldrb	r2, [r2, #0]
100012d6:	430a      	orrs	r2, r1
100012d8:	611a      	str	r2, [r3, #16]   ; P1_IOCR |= in_byte
100012da:	46bd      	mov	sp, r7
100012dc:	b002      	add	sp, #8
100012de:	bd80      	pop	{r7, pc}

100012e0:	40040100

ClearP1.0
100012e4:	b580      	push	{r7, lr}
100012e6:	af00      	add	r7, sp, #0
100012e8:	4b02      	ldr	r3, [pc, #8]	; (0x100012f4) P1_BASE
100012ea:	2280      	movs	r2, #128	; 0x80
100012ec:	0252      	lsls	r2, r2, #9      ; 0x10000
100012ee:	605a      	str	r2, [r3, #4]
100012f0:	46bd      	mov	sp, r7
100012f2:	bd80      	pop	{r7, pc}

100012f4:	40040100

ToggleP1.0
100012f8:	b580      	push	{r7, lr}
100012fa:	af00      	add	r7, sp, #0
100012fc:	4b02      	ldr	r3, [pc, #8]	; (0x10001308) P1_BASE
100012fe:	4a03      	ldr	r2, [pc, #12]	; (0x1000130c) 00010001
10001300:	605a      	str	r2, [r3, #4]
10001302:	46bd      	mov	sp, r7
10001304:	bd80      	pop	{r7, pc}

10001306:	46c0      	nop			; (mov r8, r8)
10001308:	40040100
1000130c:	00010001

SetP1_IOCR0_PC1(byte)
10001310:	b580      	push	{r7, lr}
10001312:	b082      	sub	sp, #8
10001314:	af00      	add	r7, sp, #0
10001316:	1c02      	adds	r2, r0, #0
10001318:	1dfb      	adds	r3, r7, #7
1000131a:	701a      	strb	r2, [r3, #0]
1000131c:	4b08      	ldr	r3, [pc, #32]	; (0x10001340) P1_BASE
1000131e:	4a08      	ldr	r2, [pc, #32]	; (0x10001340) P1_BASE
10001320:	6911      	ldr	r1, [r2, #16]
10001322:	4a08      	ldr	r2, [pc, #32]	; (0x10001344) ffff07ff
10001324:	400a      	ands	r2, r1
10001326:	611a      	str	r2, [r3, #16]   ;*P1_IOCR0 &= 0xffff07ff  (Clear P1_IOCR0.PC1)
10001328:	4b05      	ldr	r3, [pc, #20]	; (0x10001340) P1_BASE
1000132a:	4a05      	ldr	r2, [pc, #20]	; (0x10001340) P1_BASE
1000132c:	6911      	ldr	r1, [r2, #16]
1000132e:	1dfa      	adds	r2, r7, #7
10001330:	7812      	ldrb	r2, [r2, #0]
10001332:	0212      	lsls	r2, r2, #8
10001334:	430a      	orrs	r2, r1
10001336:	611a      	str	r2, [r3, #16]
10001338:	46bd      	mov	sp, r7
1000133a:	b002      	add	sp, #8
1000133c:	bd80      	pop	{r7, pc}

1000133e:	46c0      	nop			; (mov r8, r8)
10001340:	40040100
10001344:	ffff07ff

SetP1.1
10001348:	b580      	push	{r7, lr}
1000134a:	af00      	add	r7, sp, #0
1000134c:	4b02      	ldr	r3, [pc, #8]	; (0x10001358) = P1_BASE
1000134e:	2202      	movs	r2, #2
10001350:	605a      	str	r2, [r3, #4]
10001352:	46bd      	mov	sp, r7
10001354:	bd80      	pop	{r7, pc}
10001356:	46c0      	nop			; (mov r8, r8)

10001356:	46c0      	nop			; (mov r8, r8)
10001358:	40040100

ToggleP1.1
1000135c:	b580      	push	{r7, lr}
1000135e:	af00      	add	r7, sp, #0
10001360:	4b02      	ldr	r3, [pc, #8]	; (0x1000136c) = 40040100 P1_BASE
10001362:	4a03      	ldr	r2, [pc, #12]	; (0x10001370) = 00020002
10001364:	605a      	str	r2, [r3, #4]    ; P1_OMR = 00020002
10001366:	46bd      	mov	sp, r7
10001368:	bd80      	pop	{r7, pc}

1000136a:	46c0      	nop			; (mov r8, r8)
1000136c:	40040100
10001370:	00020002

SetP2_IOCR0_PC1(byte)
10001374:	b580      	push	{r7, lr}
10001376:	b082      	sub	sp, #8
10001378:	af00      	add	r7, sp, #0
1000137a:	1c02      	adds	r2, r0, #0
1000137c:	1dfb      	adds	r3, r7, #7
1000137e:	701a      	strb	r2, [r3, #0]
10001380:	4b08      	ldr	r3, [pc, #32]	; (0x100013a4) = P2_BASE
10001382:	4a08      	ldr	r2, [pc, #32]	; (0x100013a4) = P2_BASE
10001384:	6911      	ldr	r1, [r2, #16]
10001386:	4a08      	ldr	r2, [pc, #32]	; (0x100013a8) = 0xffff07ff
10001388:	400a      	ands	r2, r1
1000138a:	611a      	str	r2, [r3, #16]   ;*P2_IOCR0 &= 0xffff07ff  (Clear P2_IOCR0.PC1)
1000138c:	4b05      	ldr	r3, [pc, #20]	; (0x100013a4) = P2_BASE
1000138e:	4a05      	ldr	r2, [pc, #20]	; (0x100013a4) = P2_BASE
10001390:	6911      	ldr	r1, [r2, #16]
10001392:	1dfa      	adds	r2, r7, #7
10001394:	7812      	ldrb	r2, [r2, #0]
10001396:	0212      	lsls	r2, r2, #8
10001398:	430a      	orrs	r2, r1
1000139a:	611a      	str	r2, [r3, #16]   ;*P2_IOCR0.PC1 |= (byte_argv[0])
1000139c:	46bd      	mov	sp, r7
1000139e:	b002      	add	sp, #8
100013a0:	bd80      	pop	{r7, pc}

100013a2:	46c0      	nop			; (mov r8, r8)
100013a4:	40040200
100013a8:	ffff07ff
100013ab:       b580

EnableP2.1
100013ac:	b580      	push	{r7, lr}
100013ae:	af00      	add	r7, sp, #0
100013b0:	4b03      	ldr	r3, [pc, #12]	; (0x100013c0) = P2_BASE
100013b2:	4a03      	ldr	r2, [pc, #12]	; (0x100013c0) = P2_BASE
100013b4:	6e12      	ldr	r2, [r2, #96]	; 0x60 = P2_PDISC
100013b6:	2102      	movs	r1, #2
100013b8:	438a      	bics	r2, r1
100013ba:	661a      	str	r2, [r3, #96]	; 0x60
100013bc:	46bd      	mov	sp, r7
100013be:	bd80      	pop	{r7, pc}

100013c0:	40040200

SetP2_IOCR0_PC2(byte)
100013c4:	b580      	push	{r7, lr}
100013c6:	b082      	sub	sp, #8
100013c8:	af00      	add	r7, sp, #0
100013ca:	1c02      	adds	r2, r0, #0
100013cc:	1dfb      	adds	r3, r7, #7
100013ce:	701a      	strb	r2, [r3, #0]
100013d0:	4b08      	ldr	r3, [pc, #32]	; (0x100013f4) = P2_BASE
100013d2:	4a08      	ldr	r2, [pc, #32]	; (0x100013f4) = P2_BASE
100013d4:	6911      	ldr	r1, [r2, #16]   ; P2_IOCR0
100013d6:	4a08      	ldr	r2, [pc, #32]	; (0x100013f8) = FF07FFFF
100013d8:	400a      	ands	r2, r1
100013da:	611a      	str	r2, [r3, #16]   ;*P2_IOCR0 &= 0xFF07FFFF (Clear P2_IOCR0.PC2)
100013dc:	4b05      	ldr	r3, [pc, #20]	; (0x100013f4) = P2_BASE
100013de:	4a05      	ldr	r2, [pc, #20]	; (0x100013f4) = P2_BASE
100013e0:	6911      	ldr	r1, [r2, #16]   ; P2_IOCR0
100013e2:	1dfa      	adds	r2, r7, #7
100013e4:	7812      	ldrb	r2, [r2, #0]    ; argv[0] (R0)
100013e6:	0412      	lsls	r2, r2, #16     ; << 16
100013e8:	430a      	orrs	r2, r1
100013ea:	611a      	str	r2, [r3, #16]   ;*P2_IOCR0.PC2 |= (byte_argv[0])
100013ec:	46bd      	mov	sp, r7
100013ee:	b002      	add	sp, #8
100013f0:	bd80      	pop	{r7, pc}

100013f2:	46c0      	nop			; (mov r8, r8)
100013f4:	40040200
100013f8:	ffff ff07

EnableP2.2
100013fc:	b580      	push	{r7, lr}
100013fe:	af00      	add	r7, sp, #0
10001400:	4b03      	ldr	r3, [pc, #12]	; (0x10001410) = 40040200 P2_BASE
10001402:	4a03      	ldr	r2, [pc, #12]	; (0x10001410) = 40040200
10001404:	6e12      	ldr	r2, [r2, #96]	; 0x60 = P2_PDISC
10001406:	2104      	movs	r1, #4
10001408:	438a      	bics	r2, r1          ; Clear P2_DISC 0x04: Enable P2.2
1000140a:	661a      	str	r2, [r3, #96]
1000140c:	46bd      	mov	sp, r7
1000140e:	bd80      	pop	{r7, pc}

10001410:	40040200

application: Called once main is done.
10001414:	b580      	push	{r7, lr}
10001416:	af00      	add	r7, sp, #0
10001418:	4b21      	ldr	r3, [pc, #132]	; (0x100014a0) = 40010000 (SCU_GCU_BASE)
1000141a:	22c0      	movs	r2, #192	; 0xc0
1000141c:	625a      	str	r2, [r3, #36]	;*0x24 SCU_PASSWD = 0xC0
1000141e:	4b21      	ldr	r3, [pc, #132]	; (0x100014a4) = 40010300 (SCU_CCU_BASE)
10001420:	4a21      	ldr	r2, [pc, #132]	; (0x100014a8) = 3ff00400 (CLKCR default value)
10001422:	601a      	str	r2, [r3, #0]    ;*CLKCR = default
10001424:	46c0      	nop			; (mov r8, r8)
10001426:	4b1f      	ldr	r3, [pc, #124]	; (0x100014a4) = 40010300 (SCU_CCU_BASE)
10001428:	681a      	ldr	r2, [r3, #0]    ; CLKCR
1000142a:	2380      	movs	r3, #128	; 0x80
1000142c:	05db      	lsls	r3, r3, #23
1000142e:	4013      	ands	r3, r2
10001430:	d1f9      	bne.n	0x10001426      ;*Wait for VDDlow to settle
10001432:	4b1b      	ldr	r3, [pc, #108]	; (0x100014a0) = 40010000 (SCU_GCU_BASE)
10001434:	22c3      	movs	r2, #195	; 0xc3
10001436:	625a      	str	r2, [r3, #36]	;*0x24 SCU_PASSWD = 0xC3
10001438:	f7ff fe66 	bl	0x10001108      ; CalculateFrequency
1000143c:	f000 f838 	bl	0x100014b0      ; ConfigureSerial
10001440:	2080      	movs	r0, #128	
10001442:	f7ff ff37 	bl	0x100012b4      ; SetP1_IOCR0_PC0(0x80) push pull IO
10001446:	2080      	movs	r0, #128	
10001448:	f7ff ff62 	bl	0x10001310      ; SetP1_IOCR0_PC1(0x80) push pull IO
1000144c:	f7ff ffae 	bl	0x100013ac      ; EnableP2.1
10001450:	f7ff ffd4 	bl	0x100013fc      ; EnableP2.2
10001454:	f7ff ff46 	bl	0x100012e4      ; ClearP1.0
10001458:	f7ff ff76 	bl	0x10001348      ; SetP1.1
1000145c:	4b13      	ldr	r3, [pc, #76]	; (0x100014ac) frequency
1000145e:	681b      	ldr	r3, [r3, #0]
10001460:	1c18      	adds	r0, r3, #0
10001462:	210a      	movs	r1, #10
10001464:	f000 f960 	bl	0x10001728      ; Divide() frequency / 10
10001468:	1c03      	adds	r3, r0, #0
1000146a:	1c18      	adds	r0, r3, #0
1000146c:	f7ff fefe 	bl	0x1000126c      ; SetSystickPeriod
10001470:	e000      	b.n	0x10001474
10001472:	46c0      	nop			; (mov r8, r8)  ## Wait for recv buffer to be empty
10001474:	2390      	movs	r3, #144	; 0x90
10001476:	05da      	lsls	r2, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001478:	238a      	movs	r3, #138	; 0x8a
1000147a:	005b      	lsls	r3, r3, #1      ; 0x0114 USIC0_CH0_TRBSR
1000147c:	58d2      	ldr	r2, [r2, r3]
1000147e:	2308      	movs	r3, #8          ; USIC0_CH0_TRBSR.REMPTY
10001480:	4013      	ands	r3, r2
10001482:	d1f6      	bne.n	0x10001472
10001484:	2390      	movs	r3, #144	; 0x90
10001486:	05da      	lsls	r2, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001488:	2390      	movs	r3, #144	; 0x90
1000148a:	05d9      	lsls	r1, r3, #23     ; 0x48000000 USIC0_CH0_BASE
1000148c:	238e      	movs	r3, #142	; 0x8e
1000148e:	005b      	lsls	r3, r3, #1      ; 0x11C USIC0_CH0_OUTR
10001490:	58cb      	ldr	r3, [r1, r3]
10001492:	041b      	lsls	r3, r3, #16
10001494:	0c19      	lsrs	r1, r3, #16
10001496:	23c0      	movs	r3, #192	; 0xc0
10001498:	005b      	lsls	r3, r3, #1      ; 0x180 USIC0_CH0_IN
1000149a:	50d1      	str	r1, [r2, r3]
1000149c:	e7e9      	b.n	0x10001472

1000149e:	46c0      	nop			; (mov r8, r8)
100014a0:	40010000 SCU_GCU_BASE
100014a4:	40010300 SCU_CCU_BASE
100014a8:	3ff00400 CLKCR default value
100014ac:	2000092c frequency (CalculateFrequency)

ConfigureSerial
SCU_CGATCLR0     0x40010310
0x48000000 - 0x48000120
USIC0_CH0_KSCFG  0x00000005
USIC0_CH0_FDR    0x0335824e
USIC0_CH0_BRG    0x00032400
USIC0_CH0_SCTR   0x07070102
USIC0_CH0_TCSR   0x05000500
USIC0_CH0_PCR    0x00000901
USIC0_CH0_TBCTR  0x05000000
USIC0_CH0_DX3CR  0x00008000
USIC0_CH0_DX0CR  0x00008006
USIC0_CH0_RBCTR  0x05000000 *
USIC0_CH0_CCR    0x00000002
100014b0:	b580      	push	{r7, lr}
100014b2:	af00      	add	r7, sp, #0
100014b4:	4b63      	ldr	r3, [pc, #396]	; (0x10001644) = 40010000 SCU_GCU_BASE
100014b6:	22c0      	movs	r2, #192	; 0xc0
100014b8:	625a      	str	r2, [r3, #36]	; 0x24 SCU_PASSWD = 0xC0
100014ba:	4b63      	ldr	r3, [pc, #396]	; (0x10001648) = SCU_CCU_BASE
100014bc:	4a62      	ldr	r2, [pc, #392]	; (0x10001648) = SCU_CCU_BASE
100014be:	6912      	ldr	r2, [r2, #16]   ; SCU_CGATCLR0
100014c0:	2108      	movs	r1, #8          ; Clear gating of USIC0 in SCU_CGATCLR0
100014c2:	430a      	orrs	r2, r1
100014c4:	611a      	str	r2, [r3, #16]
100014c6:	4b5f      	ldr	r3, [pc, #380]	; (0x10001644) = 40010000 SCU_GCU_BASE
100014c8:	22c3      	movs	r2, #195	; 0xc3
100014ca:	625a      	str	r2, [r3, #36]	; 0x24 SCU_PASSWD = 0xC3
100014cc:	2390      	movs	r3, #144
100014ce:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100014d0:	2290      	movs	r2, #144
100014d2:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
100014d4:	68d2      	ldr	r2, [r2, #12]   ; USIC0_CH0_KSCFG |= MODEN | BPMODEN (enable the module)
100014d6:	2103      	movs	r1, #3
100014d8:	430a      	orrs	r2, r1
100014da:	60da      	str	r2, [r3, #12]
100014dc:	2390      	movs	r3, #144
100014de:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100014e0:	2290      	movs	r2, #144
100014e2:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
100014e4:	6911      	ldr	r1, [r2, #16]   ; USIC0_CH0_FDR
100014e6:	4a59      	ldr	r2, [pc, #356]	; (0x1000164c) = ffff3c00
100014e8:	400a      	ands	r2, r1
100014ea:	611a      	str	r2, [r3, #16]   ; USIC0_CH0_FDR &= ffff3c00 Clear divider mode and step
100014ec:	2390      	movs	r3, #144
100014ee:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100014f0:	2290      	movs	r2, #144
100014f2:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
100014f4:	6912      	ldr	r2, [r2, #16]   ; USIC0_CH0_FDR
100014f6:	4956      	ldr	r1, [pc, #344]	; (0x10001650) = 0000824e
100014f8:	430a      	orrs	r2, r1
100014fa:	611a      	str	r2, [r3, #16]   ; USIC0_CH0_FDR |= 0000824e DM fractional, step=24e
100014fc:	2390      	movs	r3, #144
100014fe:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001500:	2290      	movs	r2, #144
10001502:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001504:	6951      	ldr	r1, [r2, #20]   ; USIC0_CH0_BRG
10001506:	4a53      	ldr	r2, [pc, #332]	; (0x10001654) = fc0080ec
10001508:	400a      	ands	r2, r1
1000150a:	615a      	str	r2, [r3, #20]   ; USIC0_CH0_BRG Clear PDIV, DCTQ, PCTQ, PPPEN, CLKSEL
1000150c:	2390      	movs	r3, #144
1000150e:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001510:	2290      	movs	r2, #144
10001512:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001514:	6952      	ldr	r2, [r2, #20]   ; USIC0_CH0_BRG
10001516:	21c9      	movs	r1, #201	; 0xc9
10001518:	0289      	lsls	r1, r1, #10     ; 0x00032400 DCTQ=9, PDIV=3
1000151a:	430a      	orrs	r2, r1
1000151c:	615a      	str	r2, [r3, #20]
1000151e:	2390      	movs	r3, #144
10001520:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001522:	2290      	movs	r2, #144
10001524:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001526:	6b51      	ldr	r1, [r2, #52]	; USIC0_CH0_SCTR
10001528:	4a4b      	ldr	r2, [pc, #300]	; (0x10001658) = f0c0fcff
1000152a:	400a      	ands	r2, r1
1000152c:	635a      	str	r2, [r3, #52]	; USIC0_CH0_SCTR &= f0c0fcff (keep lower 8 bits of flags)
1000152e:	2390      	movs	r3, #144
10001530:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001532:	2290      	movs	r2, #144
10001534:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001536:	6b52      	ldr	r2, [r2, #52]	; 0x34 USIC0_CH0_SCTR
10001538:	4948      	ldr	r1, [pc, #288]	; (0x1000165c) = 07070102 (8 bits, active high, passive high)
1000153a:	430a      	orrs	r2, r1
1000153c:	635a      	str	r2, [r3, #52]	; USIC0_CH0_SCTR |= 07070102
1000153e:	2390      	movs	r3, #144
10001540:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001542:	2290      	movs	r2, #144
10001544:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001546:	6b91      	ldr	r1, [r2, #56]	; USIC0_CH0_TCSR
10001548:	4a45      	ldr	r2, [pc, #276]	; (0x10001660) = fffff3ff
1000154a:	400a      	ands	r2, r1
1000154c:	639a      	str	r2, [r3, #56]	; USIC0_CH0_TCSR &= fffff3ff (clear TDEN)
1000154e:	2390      	movs	r3, #144
10001550:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001552:	2290      	movs	r2, #144
10001554:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001556:	6b92      	ldr	r2, [r2, #56]	; USIC0_CH0_TCSR
10001558:	21a0      	movs	r1, #160	; 0xa0
1000155a:	00c9      	lsls	r1, r1, #3      ; 0x0500 TDSSM=1, TDEN=01
1000155c:	430a      	orrs	r2, r1
1000155e:	639a      	str	r2, [r3, #56]	; USIC0_CH0_TCSR |= 0x0500
10001560:	2390      	movs	r3, #144
10001562:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001564:	2290      	movs	r2, #144
10001566:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001568:	6bd1      	ldr	r1, [r2, #60]	; USIC0_CH0_PCR (page 14-66 for ASC)
1000156a:	4a3e      	ldr	r2, [pc, #248]	; (0x10001664) = ffff00fd (clear PL pulse len, SP sample pt,
1000156c:	400a      	ands	r2, r1          ;                          STPB stop bits)
1000156e:	63da      	str	r2, [r3, #60]	; USIC0_CH0_PCR &= 0xffff00fd
10001570:	2390      	movs	r3, #144
10001572:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001574:	2290      	movs	r2, #144
10001576:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001578:	6bd2      	ldr	r2, [r2, #60]	; USIC0_CH0_PCR
1000157a:	493b      	ldr	r1, [pc, #236]	; (0x10001668) = 00000901 (majority bit decision, 1 stop,
1000157c:	430a      	orrs	r2, r1          ;                          sample at 9)
1000157e:	63da      	str	r2, [r3, #60]	; USIC0_CH0_PCR |= 0x0901
10001580:	2390      	movs	r3, #144
10001582:	05da      	lsls	r2, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001584:	2390      	movs	r3, #144
10001586:	05d9      	lsls	r1, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001588:	2384      	movs	r3, #132
1000158a:	005b      	lsls	r3, r3, #1      ; 0x0108 USIC0_CH0_TBCTR (page 14-213)
1000158c:	58c9      	ldr	r1, [r1, r3]
1000158e:	4b37      	ldr	r3, [pc, #220]	; (0x1000166c) = f8ffffc0 clear SIZE, DPTR
10001590:	4019      	ands	r1, r3
10001592:	2384      	movs	r3, #132        ; USIC0_CH0_TBCTR &= 0xf8ffffc0
10001594:	005b      	lsls	r3, r3, #1      ; 0x0108 USIC0_CH0_TBCTR
10001596:	50d1      	str	r1, [r2, r3]
10001598:	2390      	movs	r3, #144
1000159a:	05da      	lsls	r2, r3, #23     ; 0x48000000 USIC0_CH0_BASE
1000159c:	2390      	movs	r3, #144
1000159e:	05d9      	lsls	r1, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100015a0:	2384      	movs	r3, #132
100015a2:	005b      	lsls	r3, r3, #1      ; 0x0108 USIC0_CH0_TBCTR
100015a4:	58cb      	ldr	r3, [r1, r3]
100015a6:	21a0      	movs	r1, #160	; 0xa0
100015a8:	04c9      	lsls	r1, r1, #19     ; 0x05000000 FIFO contains 32 entries
100015aa:	4319      	orrs	r1, r3
100015ac:	2384      	movs	r3, #132
100015ae:	005b      	lsls	r3, r3, #1      ; 0x0108 USIC0_CH0_TBCTR
100015b0:	50d1      	str	r1, [r2, r3]    ; USIC0_CH0_TBCTR |= 0x05000000
100015b2:	2000      	movs	r0, #0
100015b4:	f7ff ff06 	bl	0x100013c4      ; SetP2_IOCR0_PC2(0)
100015b8:	2390      	movs	r3, #144
100015ba:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100015bc:	2290      	movs	r2, #144
100015be:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
100015c0:	6a92      	ldr	r2, [r2, #40]	; 0x28 USIC0_CH0_DX3CR
100015c2:	2107      	movs	r1, #7
100015c4:	438a      	bics	r2, r1
100015c6:	629a      	str	r2, [r3, #40]	; Clear USIC0_CH0_DX3CR DSEL
100015c8:	2390      	movs	r3, #144
100015ca:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100015cc:	2290      	movs	r2, #144
100015ce:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
100015d0:	69d2      	ldr	r2, [r2, #28]   ; USIC0_CH0_DX0CR
100015d2:	2107      	movs	r1, #7
100015d4:	438a      	bics	r2, r1
100015d6:	61da      	str	r2, [r3, #28]   ; Clear USIC0_CH0_DX0CR DSEL
100015d8:	2390      	movs	r3, #144
100015da:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100015dc:	2290      	movs	r2, #144
100015de:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
100015e0:	69d2      	ldr	r2, [r2, #28]   ; USIC0_CH0_DX0CR
100015e2:	2106      	movs	r1, #6
100015e4:	430a      	orrs	r2, r1
100015e6:	61da      	str	r2, [r3, #28]   ; USIC0_CH0_DX0CR input DXnG selected
100015e8:	2390      	movs	r3, #144
100015ea:	05da      	lsls	r2, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100015ec:	2390      	movs	r3, #144
100015ee:	05d9      	lsls	r1, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100015f0:	2386      	movs	r3, #134	; 0x86
100015f2:	005b      	lsls	r3, r3, #1      ; 0x010C USIC0_CH0_RBCTR (page 14-217)
100015f4:	58c9      	ldr	r1, [r1, r3]
100015f6:	4b1d      	ldr	r3, [pc, #116]	; (0x1000166c) = f8ffffc0 clear SIZE, DPTR
100015f8:	4019      	ands	r1, r3
100015fa:	2386      	movs	r3, #134	; 0x86
100015fc:	005b      	lsls	r3, r3, #1
100015fe:	50d1      	str	r1, [r2, r3]    ; USIC0_CH0_RBCTR &= 0xf8ffffc0
10001600:	2390      	movs	r3, #144
10001602:	05da      	lsls	r2, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001604:	2390      	movs	r3, #144
10001606:	05d9      	lsls	r1, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001608:	2386      	movs	r3, #134	; 0x86
1000160a:	005b      	lsls	r3, r3, #1
1000160c:	58cb      	ldr	r3, [r1, r3]
1000160e:	4918      	ldr	r1, [pc, #96]	; (0x10001670) = 05000020
10001610:	4319      	orrs	r1, r3          ; 32 entries in buffer, DPTR=0x20
10001612:	2386      	movs	r3, #134	; 0x86
10001614:	005b      	lsls	r3, r3, #1
10001616:	50d1      	str	r1, [r2, r3]    ; USIC0_CH0_RBCTR |= 0x05000020
10001618:	20b0      	movs	r0, #176	; 0xb0
1000161a:	f7ff feab 	bl	0x10001374      ; SetP2_IOCR0_PC1(0xb0) (alt func 3 ERU0.GOUT2)
1000161e:	2390      	movs	r3, #144
10001620:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001622:	2290      	movs	r2, #144
10001624:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001626:	6c11      	ldr	r1, [r2, #64]	; 0x40 USIC0_CH0_CCR
10001628:	4a12      	ldr	r2, [pc, #72]	; (0x10001674) = fffffcf0
1000162a:	400a      	ands	r2, r1
1000162c:	641a      	str	r2, [r3, #64]	; 0x40
1000162e:	2390      	movs	r3, #144	; 0x90
10001630:	05db      	lsls	r3, r3, #23     ; 0x48000000 USIC0_CH0_BASE
10001632:	2290      	movs	r2, #144	; 0x90
10001634:	05d2      	lsls	r2, r2, #23     ; 0x48000000 USIC0_CH0_BASE
10001636:	6c12      	ldr	r2, [r2, #64]	; 0x40
10001638:	2102      	movs	r1, #2
1000163a:	430a      	orrs	r2, r1
1000163c:	641a      	str	r2, [r3, #64]	; 0x40
1000163e:	46bd      	mov	sp, r7
10001640:	bd80      	pop	{r7, pc}

10001642:	46c0      	nop			; (mov r8, r8)
10001644:	40010000
10001648:	40010300
1000164c:	ffff3c00
10001650:	0000824e
10001654:	fc0080ec
10001658:	f0c0fcff
1000165c:	07070102
10001660:	fffff3ff
10001664:	ffff00fd
10001668:	00000901
1000166c:	f8ffffc0
10001670:	05000020
10001674:	fffffcf0

SystickHandler
10001678:	b590      	push	{r4, r7, lr}
1000167a:	b083      	sub	sp, #12
1000167c:	af00      	add	r7, sp, #0
1000167e:	4b26      	ldr	r3, [pc, #152]	; (0x10001718) = 20000920 (top of stack)
10001680:	681b      	ldr	r3, [r3, #0]
10001682:	1c5a      	adds	r2, r3, #1
10001684:	4b24      	ldr	r3, [pc, #144]	; (0x10001718) = 20000920 (top of stack)
10001686:	601a      	str	r2, [r3, #0]
10001688:	4b23      	ldr	r3, [pc, #140]	; (0x10001718) = 20000920 (top of stack)
1000168a:	681b      	ldr	r3, [r3, #0]
1000168c:	2b02      	cmp	r3, #2
1000168e:	d106      	bne.n	0x1000169e
10001690:	f7ff fe32 	bl	0x100012f8      ; ToggleP1.0
10001694:	f7ff fe62 	bl	0x1000135c      ; ToggleP1.1
10001698:	4b1f      	ldr	r3, [pc, #124]	; (0x10001718) = 20000920 (top of stack)
1000169a:	2200      	movs	r2, #0
1000169c:	601a      	str	r2, [r3, #0]
1000169e:	4b1f      	ldr	r3, [pc, #124]	; (0x1000171c) = 20000924
100016a0:	681b      	ldr	r3, [r3, #0]
100016a2:	1c5a      	adds	r2, r3, #1
100016a4:	4b1d      	ldr	r3, [pc, #116]	; (0x1000171c) = 20000924
100016a6:	601a      	str	r2, [r3, #0]
100016a8:	4b1c      	ldr	r3, [pc, #112]	; (0x1000171c) = 20000924
100016aa:	681b      	ldr	r3, [r3, #0]
100016ac:	2b14      	cmp	r3, #20
100016ae:	d130      	bne.n	0x10001712
100016b0:	1dfb      	adds	r3, r7, #7
100016b2:	2200      	movs	r2, #0
100016b4:	701a      	strb	r2, [r3, #0]
100016b6:	e014      	b.n	0x100016e2
100016b8:	2390      	movs	r3, #144	; 0x90
100016ba:	05da      	lsls	r2, r3, #23     ; 0x48000000 USIC0_CH0_BASE
100016bc:	4b18      	ldr	r3, [pc, #96]	; (0x10001720) = 20000928  ; serial send buffer pos
100016be:	781b      	ldrb	r3, [r3, #0]    ; r3 = send buffer pos
100016c0:	1c19      	adds	r1, r3, #0      ; r1 = send buffer pos
100016c2:	4b18      	ldr	r3, [pc, #96]	; (0x10001724) = 20000930  ; send_buffer_32
100016c4:	0089      	lsls	r1, r1, #2      ; r1 = send buffer pos * 4
100016c6:	58c9      	ldr	r1, [r1, r3]    ; r1 = send_buffer_32[send buffer pos * 4]
100016c8:	1dfb      	adds	r3, r7, #7      ; r3 = r7 + 7
100016ca:	781b      	ldrb	r3, [r3, #0]    ; r3 = r7+7[0]
100016cc:	18cb      	adds	r3, r1, r3      ; r3 = r7+7[0] + byte to send
100016ce:	781b      	ldrb	r3, [r3, #0]    ; ???
100016d0:	1c19      	adds	r1, r3, #0      ; r1 = ???
100016d2:	23c0      	movs	r3, #192	; 0xc0
100016d4:	005b      	lsls	r3, r3, #1      ; 0x0180 USIC transmit FIFO
100016d6:	50d1      	str	r1, [r2, r3]    ; transmit FIFO + ??? = ???
100016d8:	1dfb      	adds	r3, r7, #7
100016da:	1dfa      	adds	r2, r7, #7
100016dc:	7812      	ldrb	r2, [r2, #0]
100016de:	3201      	adds	r2, #1
100016e0:	701a      	strb	r2, [r3, #0]
100016e2:	1dfb      	adds	r3, r7, #7
100016e4:	781c      	ldrb	r4, [r3, #0]
100016e6:	4b0e      	ldr	r3, [pc, #56]	; (0x10001720) = 20000928  ; serial send buffer pos
100016e8:	781b      	ldrb	r3, [r3, #0]
100016ea:	1c1a      	adds	r2, r3, #0
100016ec:	4b0d      	ldr	r3, [pc, #52]	; (0x10001724) = 20000930  ; send_buffer_32
100016ee:	0092      	lsls	r2, r2, #2
100016f0:	58d3      	ldr	r3, [r2, r3]
100016f2:	1c18      	adds	r0, r3, #0
100016f4:	f000 f868 	bl	0x100017c8      ; strlen
100016f8:	1c03      	adds	r3, r0, #0
100016fa:	429c      	cmp	r4, r3
100016fc:	d3dc      	bcc.n	0x100016b8
100016fe:	4b08      	ldr	r3, [pc, #32]	; (0x10001720) = 20000928  ; serial send buffer pos
10001700:	781b      	ldrb	r3, [r3, #0]
10001702:	2201      	movs	r2, #1
10001704:	4053      	eors	r3, r2
10001706:	b2da      	uxtb	r2, r3
10001708:	4b05      	ldr	r3, [pc, #20]	; (0x10001720) = 20000928  ; serial send buffer pos
1000170a:	701a      	strb	r2, [r3, #0]
1000170c:	4b03      	ldr	r3, [pc, #12]	; (0x1000171c) = 20000924
1000170e:	2200      	movs	r2, #0
10001710:	601a      	str	r2, [r3, #0]
10001712:	46bd      	mov	sp, r7
10001714:	b003      	add	sp, #12
10001716:	bd90      	pop	{r4, r7, pc}

10001718:	20000920  ; top of stack
1000171c:	20000924
10001720:	20000928  ; serial send buffer pos
10001724:	20000930  ; send_buffer_32

Divide
10001728:	2900      	cmp	r1, #0
1000172a:	d034      	beq.n	0x10001796

1000172c:	2301      	movs	r3, #1
1000172e:	2200      	movs	r2, #0
10001730:	b410      	push	{r4}
10001732:	4288      	cmp	r0, r1
10001734:	d32c      	bcc.n	0x10001790
10001736:	2401      	movs	r4, #1
10001738:	0724      	lsls	r4, r4, #28
1000173a:	42a1      	cmp	r1, r4
1000173c:	d204      	bcs.n	0x10001748
1000173e:	4281      	cmp	r1, r0
10001740:	d202      	bcs.n	0x10001748
10001742:	0109      	lsls	r1, r1, #4
10001744:	011b      	lsls	r3, r3, #4
10001746:	e7f8      	b.n	0x1000173a
10001748:	00e4      	lsls	r4, r4, #3
1000174a:	42a1      	cmp	r1, r4
1000174c:	d204      	bcs.n	0x10001758
1000174e:	4281      	cmp	r1, r0
10001750:	d202      	bcs.n	0x10001758
10001752:	0049      	lsls	r1, r1, #1
10001754:	005b      	lsls	r3, r3, #1
10001756:	e7f8      	b.n	0x1000174a
10001758:	4288      	cmp	r0, r1
1000175a:	d301      	bcc.n	0x10001760
1000175c:	1a40      	subs	r0, r0, r1
1000175e:	431a      	orrs	r2, r3
10001760:	084c      	lsrs	r4, r1, #1
10001762:	42a0      	cmp	r0, r4
10001764:	d302      	bcc.n	0x1000176c
10001766:	1b00      	subs	r0, r0, r4
10001768:	085c      	lsrs	r4, r3, #1
1000176a:	4322      	orrs	r2, r4
1000176c:	088c      	lsrs	r4, r1, #2
1000176e:	42a0      	cmp	r0, r4
10001770:	d302      	bcc.n	0x10001778
10001772:	1b00      	subs	r0, r0, r4
10001774:	089c      	lsrs	r4, r3, #2
10001776:	4322      	orrs	r2, r4
10001778:	08cc      	lsrs	r4, r1, #3
1000177a:	42a0      	cmp	r0, r4
1000177c:	d302      	bcc.n	0x10001784
1000177e:	1b00      	subs	r0, r0, r4
10001780:	08dc      	lsrs	r4, r3, #3
10001782:	4322      	orrs	r2, r4
10001784:	2800      	cmp	r0, #0
10001786:	d003      	beq.n	0x10001790
10001788:	091b      	lsrs	r3, r3, #4
1000178a:	d001      	beq.n	0x10001790
1000178c:	0909      	lsrs	r1, r1, #4
1000178e:	e7e3      	b.n	0x10001758
10001790:	1c10      	adds	r0, r2, #0
10001792:	bc10      	pop	{r4}
10001794:	4770      	bx	lr

10001796:	2800      	cmp	r0, #0
10001798:	d001      	beq.n	0x1000179e
1000179a:	2000      	movs	r0, #0
1000179c:	43c0      	mvns	r0, r0
1000179e:	b407      	push	{r0, r1, r2}
100017a0:	4802      	ldr	r0, [pc, #8]	; (0x100017ac) = 00000019
100017a2:	a102      	add	r1, pc, #8	; (adr r1, 0x100017ac)
100017a4:	1840      	adds	r0, r0, r1
100017a6:	9002      	str	r0, [sp, #8]
100017a8:	bd03      	pop	{r0, r1, pc}

100017aa:	46c0      	nop			; (mov r8, r8)
100017ac:	00000019
100017b0:	2900      	cmp	r1, #0
100017b2:	d0f0      	beq.n	0x10001796
100017b4:	b503      	push	{r0, r1, lr}
100017b6:	f7ff ffb9 	bl	0x1000172c
100017ba:	bc0e      	pop	{r1, r2, r3}
100017bc:	4342      	muls	r2, r0
100017be:	1a89      	subs	r1, r1, r2
100017c0:	4718      	bx	r3
100017c2:	46c0      	nop			; (mov r8, r8)
100017c4:	4770      	bx	lr
100017c6:	46c0      	nop			; (mov r8, r8)

strlen
100017c8:	2300      	movs	r3, #0
100017ca:	5cc2      	ldrb	r2, [r0, r3]
100017cc:	3301      	adds	r3, #1
100017ce:	2a00      	cmp	r2, #0
100017d0:	d1fb      	bne.n	0x100017ca
100017d2:	1e58      	subs	r0, r3, #1
100017d4:	4770      	bx	lr

100017d6:	46c0      	nop			; (mov r8, r8)
100017d8:	f840 7fff 	str.w	r7, [r0, #255]!
100017dc:	0001      	movs	r1, r0
100017de:	0000      	movs	r0, r0
100017e0:	f854 7fff 	ldr.w	r7, [r4, #255]!
100017e4:	0001      	movs	r1, r0
100017e6:	0000      	movs	r0, r0

100017e0                           56 69 73 69 74 20 77 77  |        Visit ww|
100017f0  77 2e 69 6e 66 69 6e 65  6f 6e 2e 63 6f 6d 2f 58  |w.infineon.com/X|
10001800  4d 43 0d 0a 00 00 00 00  56 69 73 69 74 20 77 77  |MC......Visit ww|
10001810  77 2e 69 6e 66 69 6e 65  6f 6e 66 6f 72 75 6d 73  |w.infineonforums|
10001820  2e 63 6f 6d 0d 0a 0d 0a  00 00 00 00 00 00 00 00  |.com............|

10001830:	482c      	ldr	r0, [pc, #176]	; (0x100018e4) HardFault
10001832:	4687      	mov	pc, r0
	...
10001850:	4825      	ldr	r0, [pc, #148]	; (0x100018e8) SVCall
10001852:	4687      	mov	pc, r0
	...
1000185c:	4823      	ldr	r0, [pc, #140]	; (0x100018ec) PendSV
1000185e:	4687      	mov	pc, r0
10001860:	4823      	ldr	r0, [pc, #140]	; (0x100018f0) SysTick
10001862:	4687      	mov	pc, r0
10001864:	4823      	ldr	r0, [pc, #140]	; (0x100018f4) IRQ0
10001866:	4687      	mov	pc, r0
10001868:	4823      	ldr	r0, [pc, #140]	; (0x100018f8) IRQ1
1000186a:	4687      	mov	pc, r0
1000186c:	4823      	ldr	r0, [pc, #140]	; (0x100018fc) IRQ2
1000186e:	4687      	mov	pc, r0
10001870:	4823      	ldr	r0, [pc, #140]	; (0x10001900) IRQ3
10001872:	4687      	mov	pc, r0
10001874:	4823      	ldr	r0, [pc, #140]	; (0x10001904) IRQ4
10001876:	4687      	mov	pc, r0
10001878:	4823      	ldr	r0, [pc, #140]	; (0x10001908) IRQ5
1000187a:	4687      	mov	pc, r0
1000187c:	4823      	ldr	r0, [pc, #140]	; (0x1000190c) IRQ6
1000187e:	4687      	mov	pc, r0
	...
10001888:	4821      	ldr	r0, [pc, #132]	; (0x10001910) IRQ9
1000188a:	4687      	mov	pc, r0
1000188c:	4821      	ldr	r0, [pc, #132]	; (0x10001914) IRQ10
1000188e:	4687      	mov	pc, r0
10001890:	4821      	ldr	r0, [pc, #132]	; (0x10001918) IRQ11
10001892:	4687      	mov	pc, r0
10001894:	4821      	ldr	r0, [pc, #132]	; (0x1000191c) IRQ12
10001896:	4687      	mov	pc, r0
10001898:	4821      	ldr	r0, [pc, #132]	; (0x10001920) IRQ13
1000189a:	4687      	mov	pc, r0
1000189c:	4821      	ldr	r0, [pc, #132]	; (0x10001924) IRQ14
1000189e:	4687      	mov	pc, r0
100018a0:	4821      	ldr	r0, [pc, #132]	; (0x10001928) IRQ15
100018a2:	4687      	mov	pc, r0
100018a4:	4821      	ldr	r0, [pc, #132]	; (0x1000192c) IRQ16
100018a6:	4687      	mov	pc, r0
	...
100018b8:	481d      	ldr	r0, [pc, #116]	; (0x10001930) IRQ21
100018ba:	4687      	mov	pc, r0
100018bc:	481d      	ldr	r0, [pc, #116]	; (0x10001934) IRQ22
100018be:	4687      	mov	pc, r0
100018c0:	481d      	ldr	r0, [pc, #116]	; (0x10001938) IRQ23
100018c2:	4687      	mov	pc, r0
100018c4:	481d      	ldr	r0, [pc, #116]	; (0x1000193c) IRQ24
100018c6:	4687      	mov	pc, r0
	...
100018e4:	100010cf HardFault
100018e8:	100010d1 SVCall
100018ec:	100010d3 PendSV
100018f0:	10001679 Systick
100018f4:	100010d7 IRQ0
100018f8:	100010d9 IRQ1
100018fc:	100010db IRQ2
10001900:	100010dd IRQ3
10001904:	100010df IRQ4
10001908:	100010e1 IRQ5
1000190c:	100010e3 IRQ6
10001910:	100010f1 IRQ9
10001914:	100010f3 IRQ10
10001918:	100010f5 IRQ11
1000191c:	100010f7 IRQ12
10001920:	100010f9 IRQ13
10001924:	100010fb IRQ14
10001928:	100010e5 IRQ15
1000192c:	100010e7 IRQ16
10001930:	100010e9 IRQ21
10001934:	100010eb IRQ22
10001938:	100010ed IRQ23
1000193c:	100010ef IRQ24
10001940:	100017e8 "Visit www.infineon.com/XMC"
10001944:	10001808 "Visit www.infineonforums.com"

SCU_CLKCR      0x3ff00400 (reset value). MCLK=8MHz
SCU_PWRSVCR    0x00000000
SCU_CGATSTAT0  0x000007f7
SCU_CGATSET0   0x00000000
SCU_CGATCLR0   0x00000000
SCU_OSCCSR     0x00000000

P1_OUT    0x00000002
P1_OMR    0x00000000
P1_IOCR0  0x00008080
P1_IOCR4  0x00000000
P1_IOCR8  0x00000000
P1_IOCR12 0x00000000
P1_IN     0x00000072
P1_PHCR0  0x00000000
P1_PHCR1  0x00000000
P1_PDISC  0x00000070
P1_PPS    0x00000000

P2_OUT    0x00000000
P2_OMR    0x00000000
P2_IOCR0  0x0000b000
P2_IOCR4  0x00000000
P2_IOCR8  0x00000000
P2_IOCR12 0x00000000
P2_IN     0x00000fff
P2_PHCR0  0x00000000
P2_PHCR1  0x00000000
P2_PDISC  0x00000ff9
P2_PPS    0x00000000

// http://www.infineonforums.com/threads/2368-Defines-for-common-baud-rate recommends:
// For an 8MHz clock rate:
// FDR_STEP 0x024E +
// BRG_PDIV      3 +
// BRG_SP        9 +
// BRG_PCTQ      0 +
// BRG_DCTQ     15 (9 used here)
// baud = fsys * step/1024       * 1/pctq+1 * 1/pdiv+1  * 1/dctq+1
// baud = 8MHz * (0x024E/0x03FF) * 1/1+1    * (1/3+1)   * 1/10    = 58.8kbaud 

// USIC0_ID        0x00aac002
// USIC0_CH0
USIC0_CH0_CCFG      0x000080cf  -  Default, R/O.
USIC0_CH0_KSCFG     0x00000005  <- ConfigureSerial (3 = Module Enable + Bit Protect for ModEn) 
USIC0_CH0_FDR       0x0335824e  <- ConfigureSerial fractional divider (result=335, dm=10(fractional), step(add)=24e)
USIC0_CH0_BRG       0x00032400  <- ConfigureSerial baud rate gen (pdiv=3(/4), dctq=9, pppen=0, fCTQIN=fPDIV)
USIC0_CH0_INPR      0x00000000  -
USIC0_CH0_DX0CR     0x00008006  <- ConfigureSerial (6. 8=current value, 6=DXnG selected. fPeriph)
USIC0_CH0_DX1CR     0x00000000  -
USIC0_CH0_DX2CR     0x00000000  -
USIC0_CH0_DX3CR     0x00008000  <- ConfigureSerial (0 = DXnA selected)
USIC0_CH0_DX4CR     0x00008000
USIC0_CH0_DX5CR     0x00008000
USIC0_CH0_SCTR      0x07070102  <- ConfigureSerial shift reg (LSB first, passive=1, active=1, FLE=8 bits, WLE=8 bits)
USIC0_CH0_TCSR      0x05000500  <- ConfigureSerial tx ctrl (0x0500, TDEN=01 (TDV enables tx), TDSSM=1 single shot mode)
USIC0_CH0_PCR       0x00000901  <- ConfigureSerial (ASC specific, SMD=3 sample majority, SP=9)
USIC0_CH0_CCR       0x00000002  <- ConfigureSerial
USIC0_CH0_CMTR      0x00000000  -  Capture mode timer register
USIC0_CH0_PSR       0x000075a7     Protocol status register (ASC specific,
USIC0_CH0_PSCR      0x00000000  -  Protocol status clear register
USIC0_CH0_RBUFSR    0x00008047
USIC0_CH0_RBUF      0x0000007e
USIC0_CH0_RBUFD     0x0000007e
USIC0_CH0_RBUF0     0x000000f0
USIC0_CH0_RBUF1     0x0000007e
USIC0_CH0_RBUF01SR  0x80478047
USIC0_CH0_FMR       0x00000000  - Flag modification register
USIC0_CH0_BYP       0x00000000  - Bypass register
USIC0_CH0_BYPCR     0x00000000  - Bypass control
USIC0_CH0_TBCTR     0x05000000  <- ConfigureSerial (SIZE=5 (depth=32))
USIC0_CH0_RBCTR     0x05000000  <- ConfigureSerial (SIZE=5 (depth=32), DPTR was also written as 0x20)
USIC0_CH0_TRBPTR    0x343d0b0b
USIC0_CH0_TRBSR     0x000a0800
USIC0_CH0_TRBSCR    0x00000000  - Tx status clear
USIC0_CH0_OUTR      0x0007007e
USIC0_CH0_OUTDR     0x00070000

